# FCOS/fcos_core/modeling/detector/generalized_rcnn.py
GeneralizedRCNN(nn.Module):

    # FCOS/fcos_core/modeling/backbone/backbone.py
    features = self.backbone(images.tensors) # "R-50-FPN-RETINANET"
    
        build_resnet_fpn_p3p7_backbone(cfg):
            body = resnet.ResNet(cfg)            
            fpn = fpn_module.FPN(in_channels_list,out_channels,conv,top_blocksP6P7) # BACKBONE_OUT_CHANNELS: 256
            model = nn.Sequential(OrderedDict([("body", body), ("fpn", fpn)]))
            
    
    proposals, proposal_losses = self.rpn(images, features, targets)
    
    x, result, detector_losses = self.roi_heads(features, proposals, targets)
    
    losses.update(detector_losses)    
    losses.update(proposal_losses)
    
    return losses


















# FCOS/configs/fcos/fcos_imprv_R_50_FPN_1x.yaml

# FCOS with improvements
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  RPN_ONLY: True
  FCOS_ON: True
  BACKBONE:
    CONV_BODY: "R-50-FPN-RETINANET"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
  RETINANET:
    USE_C5: False # FCOS uses P5 instead of C5
  FCOS:
    # normalizing the regression targets with FPN strides
    NORM_REG_TARGETS: True
    # positioning centerness on the regress branch.
    # Please refer to https://github.com/tianzhi0549/FCOS/issues/89#issuecomment-516877042
    CENTERNESS_ON_REG: True
    # using center sampling and GIoU.
    # Please refer to https://github.com/yqyao/FCOS_PLUS
    CENTER_SAMPLING_RADIUS: 1.5
    IOU_LOSS_TYPE: "giou"
DATASETS:
  TRAIN: ("coco_2014_train", "coco_2014_valminusminival")
  TEST: ("coco_2014_minival",)
INPUT:
  MIN_SIZE_TRAIN: (800,)
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1333
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.01
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000
  IMS_PER_BATCH: 16
  WARMUP_METHOD: "constant"
